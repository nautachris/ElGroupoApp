@using ElGroupo.Web.Models.Events
@using ElGroupo.Domain.Enums
@model ViewEventAttendeesModel
@{
    Layout = null;
}
@functions{
    public List<List<T>> SplitList<T>(IEnumerable<T> values, int groupSize, int? maxCount = null)
    {
        List<List<T>> result = new List<List<T>>();
        // Quick and special scenario
        if (values.Count() <= groupSize)
        {
            result.Add(values.ToList());
        }
        else
        {
            List<T> valueList = values.ToList();
            int startIndex = 0;
            int count = valueList.Count;
            int elementCount = 0;

            while (startIndex < count && (!maxCount.HasValue || (maxCount.HasValue && startIndex < maxCount)))
            {
                elementCount = (startIndex + groupSize > count) ? count - startIndex : groupSize;
                result.Add(valueList.GetRange(startIndex, elementCount));
                startIndex += elementCount;
            }
        }


        return result;

    }
    public string GetImageUrl(long id)
    {
        var url = Url.Action("UserPhoto", "Users", new { id = id });
        return url;
    }
    public string GetUserViewLink(long id)
    {
        var url = Url.Action("View", "Account", new { id = id });
        return url;

    }

    public string GetBackgroundFromRSVPStatus(RSVPTypes status)
    {
        switch (status)
        {
            case RSVPTypes.Maybe:
                return "yellow";
            case RSVPTypes.No:
                return "red";
            case RSVPTypes.Yes:
                return "green";
            case RSVPTypes.None:
                return "gray";
            default:
                return "transparent";

        }

    }
    public string GetForegroundFromRSVPStatus(RSVPTypes status)
    {
        switch (status)
        {
            case RSVPTypes.Maybe:
                return "black";
            case RSVPTypes.No:
                return "white";
            case RSVPTypes.Yes:
                return "white";
            case RSVPTypes.None:
                return "white";
            default:
                return "transparent";

        }

    }
    //TinaDWallis@fleckens.hu



}

@if (Model.Attendees.Count > 0)
{
    @foreach (var attGroup in SplitList<EventAttendeeModel>(Model.Attendees, 4))
    {
        <div class="row">
            @foreach (var att in attGroup)
            {
                <div data-user-id="@att.UserId" class="col span-1-of-4 centered rounded-border attendee-container" style="text-align:center; position:relative; cursor:pointer">
                    <div class="attendee-info" style="z-index:2;">
                        <img class="image-circle-200" style="background-image:url('@GetImageUrl(att.UserId)')" />
                        <span class="attendee-name" style="color: white; font-weight:bold; padding:5px; text-transform:uppercase; border-radius:5px; background-color:@GetBackgroundFromRSVPStatus(att.RSVPStatus); color:@GetForegroundFromRSVPStatus(att.RSVPStatus)">@att.Name</span>
                        @if (att.IsOrganizer)
                        {
                            <span>*</span>

                        }
                    </div>
                    <div class="attendee-links centered" style="z-index:3; display:none; position:absolute; top: 40%; left:5%; width:90%;">
                        <a class="no-decoration" data-action="profile" data-profile-link="@GetUserViewLink(att.UserId)">View Profile</a>
                        @if (Model.IsOrganizer)
                        {
                            <a class="no-decoration" data-action="remove" style="display:inline-block; width:100%;">Remove Attendee</a>
                        }

                    </div>









                </div>
            }
        </div>
    }

    @if (Model.IsOrganizer && Model.Attendees.Any(x => x.RSVPStatus == RSVPTypes.None))
    {
        <div class="row centered">
            <div class="col span-2-of-2">
                <a id="btnSendRSVPReminders" class="btn btn-primary">Send RSVP Reminders</a>
            </div>
        </div>

    }

}
else
{
    <h3 style="text-align:center;">You haven't invited anyone dumbass!</h3>

}
