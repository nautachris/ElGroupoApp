@using ElGroupo.Web.Models.Events
@model IEnumerable<EventAttendeeModel>
@{
    Layout = null;
}
@functions{
    public List<List<T>> SplitList<T>(IEnumerable<T> values, int groupSize, int? maxCount = null)
    {
        List<List<T>> result = new List<List<T>>();
        // Quick and special scenario
        if (values.Count() <= groupSize)
        {
            result.Add(values.ToList());
        }
        else
        {
            List<T> valueList = values.ToList();
            int startIndex = 0;
            int count = valueList.Count;
            int elementCount = 0;

            while (startIndex < count && (!maxCount.HasValue || (maxCount.HasValue && startIndex < maxCount)))
            {
                elementCount = (startIndex + groupSize > count) ? count - startIndex : groupSize;
                result.Add(valueList.GetRange(startIndex, elementCount));
                startIndex += elementCount;
            }
        }


        return result;

    }
    public string GetImageUrl(long id)
    {
        var url = Url.Action("UserPhoto", "Users", new { id = id });
        return url;
    }
    public string GetUserViewLink(long id)
    {
        var url = Url.Action("View", "Account", new { id = id });
        return url;

    }



}

@if (Model.Count() > 0)
{
    @foreach (var attGroup in SplitList<EventAttendeeModel>(Model, 4))
    {
        <div class="row">
            @foreach (var att in attGroup)
            {
                <div class="col span-1-of-4" style="text-align:center;">
                    <a href="@GetUserViewLink(att.UserId)">
                        <img class="image-circle-200" style="background-image:url('@GetImageUrl(att.UserId)')" />
                        <span style="font-weight:bold; text-transform:uppercase;">@att.Name</span>
                    </a>

                </div>
            }
        </div>
    }

}
else
{
    <h3 style="text-align:center;">You haven't invited anyone dumbass!</h3>

}
